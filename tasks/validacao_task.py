# -*- coding: utf-8 -*-
"""
Task de Valida√ß√£o - Assistente Jur√≠dico IA
Respons√°vel por revisar e validar as respostas dos especialistas
"""

from crewai import Task

def create_validacao_task(agent_coordenador, resposta_especialista, consulta_original):
    """
    Cria task de valida√ß√£o para revisar resposta do especialista
    """
    
    task = Task(
        description=f'''Revisa e valida a resposta jur√≠dica fornecida pelo especialista,
        garantindo que:

        VALIDA√á√ÉO DE CONTE√öDO:
        1. As cita√ß√µes legais est√£o corretas e precisas
        2. Os conceitos jur√≠dicos est√£o bem explicados
        3. A informa√ß√£o est√° atualizada conforme legisla√ß√£o portuguesa
        4. A resposta √© completa e responde √† pergunta

        VALIDA√á√ÉO DE FORMA:
        1. Linguagem √© clara e acess√≠vel
        2. Estrutura √© l√≥gica e bem organizada
        3. Inclui o aviso legal obrigat√≥rio
        4. N√£o cont√©m conselhos jur√≠dicos espec√≠ficos

        MELHORIAS:
        1. Adiciona informa√ß√µes relevantes em falta
        2. Clarifica pontos confusos
        3. Melhora a estrutura se necess√°rio
        4. Garante compliance com limita√ß√µes √©ticas

        Se encontrares problemas significativos, indica as corre√ß√µes necess√°rias.
        Se a resposta estiver adequada, confirma e apresenta a vers√£o final.

        CONSULTA ORIGINAL: "{consulta_original}"
        RESPOSTA A VALIDAR: "{resposta_especialista}"''',
        
        agent=agent_coordenador,
        expected_output='''Valida√ß√£o estruturada contendo:
        1. An√°lise da corre√ß√£o das cita√ß√µes legais
        2. Avalia√ß√£o da clareza dos conceitos explicados
        3. Verifica√ß√£o da completude da resposta
        4. Confirma√ß√£o da presen√ßa do aviso legal
        5. Lista de melhorias aplicadas (se houver)
        6. Resposta final validada e aprovada
        7. Confirma√ß√£o de compliance √©tico''',
        
        output_file=None
    )
    
    return task

def test_validacao_task():
    """Teste da task de valida√ß√£o"""
    try:
        from agents.coordenador import create_coordenador_agent
        coordenador = create_coordenador_agent()
        task = create_validacao_task(
            coordenador, 
            "Resposta de teste",
            "Consulta de teste"
        )
        print("‚úÖ Task de Valida√ß√£o criada com sucesso!")
        print(f"Descri√ß√£o: {task.description[:100]}...")
        return True
    except Exception as e:
        print(f"‚ùå Erro ao criar Task de Valida√ß√£o: {e}")
        return False

if __name__ == "__main__":
    from dotenv import load_dotenv
    load_dotenv()
    
    print("üîç Testando Task de Valida√ß√£o...")
    print("-" * 40)
    
    success = test_validacao_task()
    
    if success:
        print("\n‚úÖ Task de Valida√ß√£o est√° pronta!")
        print("üéØ Fun√ß√£o: Revis√£o e valida√ß√£o das respostas jur√≠dicas")